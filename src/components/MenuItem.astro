---
interface Props {
    title: string;
	description: string;
    color: string;
    src: string;
    srcMobile: string;
    borderBottom?: boolean;
}

const { title, description, color, src, srcMobile, borderBottom } = Astro.props;

---

<div class:list={['menu-item', { border: borderBottom }]}>
    <picture>
        <source srcset={ srcMobile } media="(width <= 600px)">
        <img src={ src } alt={ title }>
    </picture>
    <div class="text">
        <h3>{ title }</h3>
        <p>{ description }</p>
    </div>
</div>

<style define:vars={{ color }}>
    .menu-item {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 30px;
        max-width: 570px;
        padding: 30px 0;
    }

    .border {
        border-bottom: 1px solid hsla(0, 0%, 65%, 0.3);
    }

    picture {
        display: flex;
    }

    picture > img {
        max-width: 150px;
    }

    picture::after {
        content: '';
        width: 35px;
        height: 1px;
        margin-top: 20px;
        background: var(--golden);
    }

    .text {
        display: flex;
        flex-direction: column;
        gap: 10px;
        color: var(--color);
    }

    h3 {
        font-size: 20px;
    }

    p {
        font-size: 16px;
        line-height: 24px;
    }

    @media screen and (width <= 600px) {
        .menu-item {
            display: flex;
            flex-direction: column;
            max-width: 100%;
            text-align: center;
        }

        picture {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        picture > img {
            max-width: 100%;
        }

        picture::after {
            display: none;
        }

        .text {
           padding-inline: 5%;
        }

        h3 {
            font-size: clamp(18px, 5vw, 20px);
        }

        p {
            font-size: 15px;
            line-height: 20px;
        }
    }

</style>